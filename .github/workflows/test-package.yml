name: test-package

on: 
  push:
    branches:
      - '**'
    tags-ignore:
      - '*'
  workflow_dispatch:

jobs:
  test-client:
    needs: test-bot
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client

    strategy:
      matrix:
        node: [16]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v2

      - name: Setup node env 🏗
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@peoplegeist'
      
      - name: Cache node_modules 📦
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies 👨🏻‍💻
        run: npm ci

      - name: Build backend-common 🏗️
        run: npm run build

      - name: test npm package NPM 🔬
        run: npm test
        env:
          CERT_DOMAIN: test-api.peoplegeist.com
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET_NAME: buildtools-peoplegeist.com
          S3_BUCKET_PREFIX: test/certs
  
  test-bot:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bot

    strategy:
      matrix:
        node: [16]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v2

      - name: build bot
        run: docker build -t zerossl-certrenewal-bot ./
      
      - name: run bot
        run: docker run -e ZEROSSL_EMAIL=admin@peoplegeist.com -e CERT_DOMAIN=test-api.peoplegeist.com -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -e S3_BUCKET_URL=s3://buildtools-peoplegeist.com/test/certs zerossl-certrenewal-bot

          

        